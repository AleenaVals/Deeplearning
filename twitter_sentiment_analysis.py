# -*- coding: utf-8 -*-
"""Twitter Sentiment Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oaS4yoOiO38rxJVw_zwC3ZhlDC4gUuZs
"""

import pandas as pd

df=pd.read_csv("/content/drive/MyDrive/COVIDSenti-A.csv")

df

#cleaning the data using regular expression

import re
documents_clean = []
for d in df["tweet"]:
    document_test = re.sub(r'[^\x00-\x7F]+', ' ', d)
    document_test = re.sub(r'@\w+', '', document_test)
    document_test = document_test.lower()
    document_test = re.sub(r'[0-9]', '', document_test)
    document_test = re.sub(r'\s{2,}', ' ', document_test)
    document_test=re.sub(r'http\S+', '', document_test)
    documents_clean.append(document_test)

X=documents_clean
y=df.drop('tweet',axis=1)

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=101)

from sklearn.feature_extraction.text import TfidfVectorizer
# Create feature vectors
vectorizer = TfidfVectorizer(min_df = 5,
                             max_df = 0.8,
                             sublinear_tf = True,
                             use_idf = True)
train_vectors = vectorizer.fit_transform(X_train)
test_vectors = vectorizer.transform(X_test)

from sklearn import svm
from sklearn.metrics import classification_report

# Perform classification with SVM, kernel=linear
classifier_linear = svm.SVC(kernel='linear')
classifier_linear.fit(train_vectors, y_train)
prediction_linear = classifier_linear.predict(test_vectors)

# results
report = classification_report(y_test, prediction_linear, output_dict=True)
print('positive: ', report['pos'])
print('negative: ', report['neg'])

T1="Many people spent their time effectively during lockdown"
review_vector = vectorizer.transform([T1]) 
print(classifier_linear.predict(review_vector))

T2="Covid made a terrible future"
review_vector2 = vectorizer.transform([T2]) 
print(classifier_linear.predict(review_vector2))

T3="Quarantine is boring"
review_vector3 = vectorizer.transform([T3]) 
print(classifier_linear.predict(review_vector3))

